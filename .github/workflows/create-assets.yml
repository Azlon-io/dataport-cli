name: Create Assets

# To create a build and release it, simply add a tag on the production code that you want released and push it to GitHub.
# GitHub will then start a CI & CD
# example:
# git tag -a v2.0.27 -m "Release 2.0.27"
# git push origin v2.0.27

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Create assets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: ['win-x64', 'linux-x64'] # ,, 'osx-x64' , 'win-arm64', 'win-x86',  'linux-arm64', 'osx-arm64' ]
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Get the tag without the 'v' prefix
        id: format_tag
        shell: bash
        run: |
          TAG=${{ github.ref }}
          TAG=${TAG:11}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: install nuget repo
        run: |
          dotnet nuget add source --username sfyschuurmans --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Azlon-io/index.json"
#-p:NuGetVersion=${{ steps.format_tag.outputs.tag }}
      - name: DotNet Publish
        run: |
          cd src/Azlon.Dataport.Console
          dotnet restore --force --runtime ${{ matrix.distribution }}
          dotnet publish -c Release -o ./artifacts --runtime ${{ matrix.distribution }} --self-contained true -p:PublishTrimmed=true -p:TrimMode=Link -p:PublishSingleFile=true -p:AssemblyNameVersion=azlonctl -p:AssemblyVersion=${{ steps.format_tag.outputs.tag }} -p:Version=${{ steps.format_tag.outputs.tag }}
      
      - name: Zip
        run: |
          mkdir ./src/Azlon.Dataport.Console/zip
          cd ./src/Azlon.Dataport.Console/artifacts
          zip -r ../zip/azlonctl-${{ matrix.distribution }}.zip .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-publish-${{ matrix.distribution }}
          path: ./src/Azlon.Dataport.Console/zip/
  
  release:
    name: Create release
    needs: publish
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  assets:
    name: Add assets to release
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: ['win-x64', 'linux-x64'] # ,  'osx-x64' , 'win-arm64', 'win-x86',  'linux-arm64', 'osx-arm64' ] # add only if requested by a consumer
    steps:

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: dotnet-publish-${{ matrix.distribution }}
        path: ./artifacts/

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./artifacts/azlonctl-${{ matrix.distribution }}.zip
        asset_name: azlonctl-${{ matrix.distribution }}.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
